/**
 * bootbox.js v2.6
 *
 * http://bootboxjs.com/license.txt
 */
var bootbox = window.bootbox || function (n) { function r(n, t) { return (t == null && (t = s), typeof u[t][n] == "string") ? u[t][n] : t != h ? r(n, h) : n } var s = "en", h = "en", c = !0, f = "static", e = "javascript:;", l = "", i = {}, t = {}, u = { en: { OK: "OK", CANCEL: "Cancel", CONFIRM: "OK", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, fr: { OK: "OK", CANCEL: "Annuler", CONFIRM: "D'accord", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, de: { OK: "OK", CANCEL: "Abbrechen", CONFIRM: "Akzeptieren", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, es: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Aceptar", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, br: { OK: "OK", CANCEL: "Cancelar", CONFIRM: "Sim", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, nl: { OK: "OK", CANCEL: "Annuleren", CONFIRM: "Accepteren", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, ru: { OK: "OK", CANCEL: "Отмена", CONFIRM: "Применить", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, it: { OK: "OK", CANCEL: "Annulla", CONFIRM: "Conferma", CONFIRM_TITLE: "Confirm", ALERT_TITLE: "Alert", DIALOG_TITLE: "Dialog" }, tr: { OK: "Tamam", CANCEL: "İptal", CONFIRM: "Evet", CONFIRM_TITLE: "Onay", ALERT_TITLE: "Uyarı", DIALOG_TITLE: "İletişim Penceresi" } }, o; return t.setLocale = function (n) { for (var t in u) if (t == n) { s = n; return } throw new Error("Invalid locale: " + n); }, t.addLocale = function (n, t) { typeof u[n] == "undefined" && (u[n] = {}); for (var i in t) u[n][i] = t[i] }, t.setIcons = function (n) { i = n, (typeof i != "object" || i == null) && (i = {}) }, t.alert = function () { var n = "", f = r("OK"), u = null; switch (arguments.length) { case 1: n = arguments[0]; break; case 2: n = arguments[0], typeof arguments[1] == "function" ? u = arguments[1] : f = arguments[1]; break; case 3: n = arguments[0], f = arguments[1], u = arguments[2]; break; default: throw new Error("Incorrect number of arguments: expected 1-3"); } return t.dialog(n, [{ label: f, icon: i.OK, callback: u }], { onEscape: u, header: r("ALERT_TITLE"), height: 200 }) }, t.confirm = function () { var u = "", f = r("CANCEL"), e = r("CONFIRM"), n = null; switch (arguments.length) { case 1: u = arguments[0]; break; case 2: u = arguments[0], typeof arguments[1] == "function" ? n = arguments[1] : f = arguments[1]; break; case 3: u = arguments[0], f = arguments[1], typeof arguments[2] == "function" ? n = arguments[2] : e = arguments[2]; break; case 4: u = arguments[0], f = arguments[1], e = arguments[2], n = arguments[3]; break; default: throw new Error("Incorrect number of arguments: expected 1-4"); } return t.dialog(u, [{ label: f, icon: i.CANCEL, callback: function () { typeof n == "function" && n(!1) } }, { label: e, icon: i.CONFIRM, callback: function () { typeof n == "function" && n(!0) }, "class": "btn-primary" }], { header: r("CONFIRM_TITLE"), height: 200 }) }, t.prompt = function () { var f = "", o = r("CANCEL"), s = r("CONFIRM"), u = null, c = "", l, e, h; switch (arguments.length) { case 1: f = arguments[0]; break; case 2: f = arguments[0], typeof arguments[1] == "function" ? u = arguments[1] : o = arguments[1]; break; case 3: f = arguments[0], o = arguments[1], typeof arguments[2] == "function" ? u = arguments[2] : s = arguments[2]; break; case 4: f = arguments[0], o = arguments[1], s = arguments[2], u = arguments[3]; break; case 5: f = arguments[0], o = arguments[1], s = arguments[2], u = arguments[3], c = arguments[4]; break; default: throw new Error("Incorrect number of arguments: expected 1-5"); } l = f, e = n("<form><\/form>"), e.append("<input autocomplete='off' style='width: 97%;' type=text value='" + c + "' />"), h = t.dialog(e, [{ label: o, icon: i.CANCEL, callback: function () { typeof u == "function" && u(null) } }, { label: s, icon: i.CONFIRM, callback: function () { typeof u == "function" && u(e.find("input[type=text]").val()) } }], { header: l, height: 180 }); h.on("shown", function () { e.find("input[type=text]").focus(); e.on("submit", function (n) { n.preventDefault(), h.find(".btn-primary").click() }) }); return h }, t.modal = function () { var r, u, i, e = { onEscape: null, keyboard: !0, backdrop: f }; switch (arguments.length) { case 1: r = arguments[0]; break; case 2: r = arguments[0], typeof arguments[1] == "object" ? i = arguments[1] : u = arguments[1]; break; case 3: r = arguments[0], u = arguments[1], i = arguments[2]; break; default: throw new Error("Incorrect number of arguments: expected 1-3"); } return e.header = u, i = typeof i == "object" ? n.extend(e, i) : e, t.dialog(r, [], i) }, o = function (t, i) { var p = [], f = [], r, h, c, u, l; for (i.find(".modal-footer").empty(), r = t.length; r--;) { var a = null, o = null, s = null, v = "", y = null; if (typeof t[r].label == "undefined" && typeof t[r]["class"] == "undefined" && typeof t[r].callback == "undefined") { h = 0, c = null; for (u in t[r]) if (c = u, ++h > 1) break; h == 1 && typeof t[r][u] == "function" && (t[r].label = c, t[r].callback = t[r][u]) } typeof t[r].callback == "function" && (y = t[r].callback, f[r] = y), t[r]["class"] ? s = t[r]["class"] : r == t.length - 1 && t.length <= 2 && (s = "btn-primary"), a = t[r].label ? t[r].label : "Option " + (r + 1), t[r].icon && (v = "<i class='" + t[r].icon + "'><\/i> "), o = t[r].href ? t[r].href : e, l = n("<a data-handler='" + r + "' class='btn " + s + "' href='" + o + "'>" + v + "" + a + "<\/a>"), i.find(".modal-footer").append(l); l.on("click", function (t) { $self = n(this); var r = null, u = $self.data("handler"); o === e && (t.preventDefault(), typeof f[u] == "function" && (r = f[u](i, t)), r !== !1 && (hideSource = "button", i.modal("hide"))) }) } return p }, t.dialog = function (t, i, r) { var y = null, b = "", k = [], u = u || {}, w = { width: 500, height: 400, backdrop: f, remote: !1, keyboard: !0, header: "Dialog" }, u = n.extend({}, w, r), h, a, s, p, v; i == null ? i = [] : typeof i.length == "undefined" && (i = [i]), h = ["<div class='bootbox modal' style='overflow:hidden;'>"], u.header && (a = "", (typeof u.headerCloseButton == "undefined" || u.headerCloseButton) && (a = "<a href='" + e + "' class='close'>&times;<\/a>"), h.push("<div class='modal-header'>" + a + "<h3>" + u.header + "<\/h3><\/div>")), h.push("<div class='modal-body'><\/div>"), i.length > 0 && h.push("<div class='modal-footer'><\/div>"), h.push("<\/div>"), s = n(h.join("\n")), p = typeof u.animate == "undefined" ? c : u.animate, p && s.addClass("fade"), s.width(u.width), s.find(".modal-body").height(u.height - 140), v = typeof u.classes == "undefined" ? l : u.classes, v && s.addClass(v), n(".modal-body", s).html(t); s.on("click", ".close", function (n) { n.preventDefault(), s.modal("hide") }); s.bind("hidden", function () { s.remove() }), s.bind("hide", function () { y == "escape" && typeof u.onEscape == "function" && u.onEscape() }), n(document).bind("keyup.modal", function (n) { n.which == 27 && (y = "escape") }), s.bind("shown", function () { n("a.btn-primary:last", s).focus() }); s.on("click", ".modal-footer a, a.close", function () { }); return u.keyboard == null && (u.keyboard = typeof u.onEscape == "function"), n("body").append(s), s.modal(u), s.data("bootboxoptions", u), o(i, s), s }, t.hideAll = function () { n(".bootbox").modal("hide") }, t.animate = function (n) { c = n }, t.backdrop = function (n) { f = n }, t.classes = function (n) { l = n }, t.setOptions = function (t, i, r) { if (typeof t == "object") { if (typeof r == "object") { var u = t.data("bootboxoptions"); u = n.extend(u, r), typeof r.header && t.find(".modal-header h3").text(r.header), typeof r.width && t.width(r.width), typeof r.height && t.find(".modal-body").height(r.height) } typeof i == "object" && o(i, t) } }, t }(window.jQuery); (function (n) { n.fn.bootbox = function () { var t = n(this), s = null, u = "Cancel", f = "OK", i = [], r = function () { }, e, o; if (options = { callback: function () { }, header: "Dialog" }, t.length != 0) { if (arguments.length == 0) return bootbox.modal(t.html(), _translate("DIALOG_TITLE")); if (arguments.length > 0) { if (typeof arguments[0] == "string") switch (arguments[0]) { case "alert": return e = "Ok", arguments.length > 2 && (r = arguments[2]), arguments.length > 1 && (e = arguments[1]), bootbox.alert(t.html(), e, r); case "confirm": return arguments.length > 3 && (r = arguments[3]), arguments.length > 2 && (f = arguments[2]), arguments.length > 1 && (u = arguments[1]), bootbox.confirm(t.html(), u, f, r); case "prompt": return o = "", arguments.length > 3 && typeof arguments[3] == "function" && (r = arguments[3]), arguments.length > 4 && (o = arguments[4]), arguments.length > 2 && (f = arguments[2]), arguments.length > 1 && (u = arguments[1]), bootbox.prompt(t.html(), u, f, r, o); case "modal": return arguments.length > 1 && (options = n.extend(options, arguments[2])), bootbox.modal(t.html(), options); case "dialog": return arguments.length > 2 && (options = n.extend(options, arguments[2])), arguments.length > 1 && (i = arguments[1]), bootbox.dialog(t.html(), i, options); case "hideAll": return bootbox.hideAll(); case "animate": return bootbox.animate(arguments[1]); case "backdrop": return bootbox.backdrop(arguments[1]); case "classes": return bootbox.classes(arguments[1]); case "setOptions": return i = null, options = {}, arguments.length > 2 && (i = arguments[2]), arguments.length > 1 && (options = arguments[1]), bootbox.setOptions(t, i, options); default: return bootbox.modal(t.html(), _translate("DIALOG_TITLE")) } else { if (typeof arguments[0] == "object") return options = n.extend(options, arguments[0]), bootbox.dialog(t.html(), [], options); if (typeof arguments[0] == "array") return i = n.extend(options, arguments[0]), bootbox.dialog(t.html(), i); if (arguments.length = 2 && typeof arguments[0] == "array" && typeof arguments[1] == "object") return options = n.extend(options, arguments[1]), i = arguments[0], bootbox.dialog(t.html(), i, options) } return bootbox.modal(t.html(), _translate("DIALOG_TITLE")) } } } })(jQuery)